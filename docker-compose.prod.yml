version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: face_attendance
      POSTGRES_USER: face_attendance_user
      POSTGRES_PASSWORD: face_attendance_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U face_attendance_user -d face_attendance"]
      interval: 30s
      timeout: 10s
      retries: 3

  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://face_attendance_user:face_attendance_password@postgres:5432/face_attendance
      - API_HOST=0.0.0.0
      - API_PORT=8001
      - SECRET_KEY=your-super-secret-key-here-make-it-long-and-random
      - RECOGNITION_THRESHOLD=0.7
      - EMBEDDING_MODEL_VERSION=buffalo_l
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    environment:
      - DATABASE_URL=postgresql://face_attendance_user:face_attendance_password@postgres:5432/face_attendance
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./frontend:/app/frontend
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/static:/var/www/static
      - ./frontend/media:/var/www/media
    depends_on:
      - fastapi
      - django
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
